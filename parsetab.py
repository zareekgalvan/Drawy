
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3A3CE76CE594C817A79F732F7685A949'
    
_lr_action_items = {'CTEDOUBLE':([49,50,53,54,55,56,67,86,87,88,90,91,92,94,95,98,99,100,101,102,103,104,105,106,107,113,122,124,145,],[59,59,59,59,59,59,-79,59,59,-76,-74,-75,-55,59,-56,-69,-74,-70,-64,-60,59,-65,-63,-61,-62,59,59,59,59,]),'LPAR':([24,28,32,33,41,42,44,50,55,56,66,67,77,87,88,90,91,92,94,95,98,99,100,101,102,103,104,105,106,107,122,124,],[-18,31,49,50,53,54,56,67,67,67,86,-79,86,67,-76,-74,-75,-55,67,-56,-69,-74,-70,-64,-60,67,-65,-63,-61,-62,67,67,]),'RETURN':([1,25,29,34,36,37,38,39,40,43,45,51,84,114,118,119,127,128,129,131,134,142,146,147,],[-6,-3,-2,-30,-36,-29,-34,-37,-35,-33,-32,-31,-3,-38,-30,-43,-42,-44,-47,-41,145,-39,-88,-40,]),'READ':([1,25,27,29,30,34,36,38,39,40,43,45,84,114,118,119,126,127,128,129,131,142,146,147,],[-6,-3,-3,-2,32,32,-36,-34,-37,-35,-33,-32,-3,-38,32,-43,32,-42,-44,-47,-41,-39,-88,-40,]),'VOID':([13,],[19,]),'FEWER':([59,60,61,62,63,65,66,68,70,71,72,89,96,97,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,-68,106,-71,-78,-66,-91,-77,-72,-67,]),'RPAR':([31,47,48,54,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,81,82,86,89,93,96,97,108,112,116,120,121,123,125,130,132,135,136,137,138,139,141,144,],[-20,58,-19,-49,-82,-87,-81,-84,-85,85,-86,-83,-73,-54,-80,-68,-59,109,110,-45,-46,-83,111,-51,115,-5,-49,-71,-52,-78,-66,-57,-48,-24,135,136,-54,-58,-51,-21,-91,-77,-72,-53,-67,-50,-23,]),'LBRACKET':([16,23,58,109,115,143,],[-18,27,84,126,126,126,]),'WHILE':([1,25,27,29,30,34,36,38,39,40,43,45,84,114,118,119,126,127,128,129,131,142,146,147,],[-6,-3,-3,-2,33,33,-36,-34,-37,-35,-33,-32,-3,-38,33,-43,33,-42,-44,-47,-41,-39,-88,-40,]),'MULTIPLICATION':([59,60,61,62,63,65,66,68,70,96,135,136,],[-82,-87,-81,-84,-85,-86,-83,91,-80,-78,-91,-77,]),'TRUE':([49,50,53,54,55,56,67,86,87,88,90,91,92,94,95,98,99,100,101,102,103,104,105,106,107,113,122,124,145,],[65,65,65,65,65,65,-79,65,65,-76,-74,-75,-55,65,-56,-69,-74,-70,-64,-60,65,-65,-63,-61,-62,65,65,65,65,]),'MINUS':([59,60,61,62,63,65,66,68,70,71,89,96,135,136,137,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,100,-71,-78,-91,-77,-72,]),'COMMA':([59,60,61,62,65,75,76,77,79,82,116,130,135,],[-82,-87,-81,-84,-86,-45,-46,-83,113,-5,133,113,-91,]),'SEMICOLON':([14,22,59,60,61,62,63,65,66,68,69,70,71,72,80,85,89,93,96,97,108,110,111,123,125,135,136,137,138,139,148,],[-5,25,-82,-87,-81,-84,-85,-86,-83,-73,-54,-80,-68,-59,114,119,-71,-52,-78,-66,-57,128,129,-54,-58,-91,-77,-72,-53,-67,149,]),'FEWEROREQUAL':([59,60,61,62,63,65,66,68,70,71,72,89,96,97,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,-68,105,-71,-78,-66,-91,-77,-72,-67,]),'PLUS':([59,60,61,62,63,65,66,68,70,71,89,96,135,136,137,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,98,-71,-78,-91,-77,-72,]),'DOUBLELIST':([0,25,27,31,84,133,],[8,8,8,8,8,8,]),'$end':([5,15,26,52,],[0,-1,-89,-90,]),'DIVISION':([59,60,61,62,63,65,66,68,70,96,135,136,],[-82,-87,-81,-84,-85,-86,-83,88,-80,-78,-91,-77,]),'DIFFERENT':([59,60,61,62,63,65,66,68,70,71,72,89,96,97,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,-68,101,-71,-78,-66,-91,-77,-72,-67,]),'EQUALEQUALS':([59,60,61,62,63,65,66,68,70,71,72,89,96,97,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,-68,104,-71,-78,-66,-91,-77,-72,-67,]),'CTEINT':([49,50,53,54,55,56,67,86,87,88,90,91,92,94,95,98,99,100,101,102,103,104,105,106,107,113,122,124,145,],[61,61,61,61,61,61,-79,61,61,-76,-74,-75,-55,61,-56,-69,-74,-70,-64,-60,61,-65,-63,-61,-62,61,61,61,61,]),'EQUALS':([42,],[55,]),'ELSE':([131,146,],[143,-88,]),'WRITE':([1,25,27,29,30,34,36,38,39,40,43,45,84,114,118,119,126,127,128,129,131,142,146,147,],[-6,-3,-3,-2,41,41,-36,-34,-37,-35,-33,-32,-3,-38,41,-43,41,-42,-44,-47,-41,-39,-88,-40,]),'FUNC':([0,1,9,25,29,58,83,150,],[-3,-6,13,-3,-2,-26,13,-25,]),'INTLIST':([0,25,27,31,84,133,],[7,7,7,7,7,7,]),'ID':([1,2,3,4,6,7,8,10,17,18,19,20,21,25,27,29,30,34,36,38,39,40,43,45,46,49,50,53,54,55,56,57,67,84,86,87,88,90,91,92,94,95,98,99,100,101,102,103,104,105,106,107,113,114,118,119,122,124,126,127,128,129,131,142,145,146,147,],[-6,-4,-8,-9,-10,-11,-12,14,24,-15,-17,-14,-16,-3,-3,-2,42,42,-36,-34,-37,-35,-33,-32,-22,66,66,77,77,66,66,82,-79,-3,77,66,-76,-74,-75,-55,66,-56,-69,-74,-70,-64,-60,66,-65,-63,-61,-62,77,-38,42,-43,66,66,42,-42,-44,-47,-41,-39,66,-88,-40,]),'IF':([1,25,27,29,30,34,36,38,39,40,43,45,84,114,118,119,126,127,128,129,131,142,146,147,],[-6,-3,-3,-2,44,44,-36,-34,-37,-35,-33,-32,-3,-38,44,-43,44,-42,-44,-47,-41,-39,-88,-40,]),'AND':([59,60,61,62,63,65,66,68,69,70,71,72,89,96,97,108,123,125,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,92,-80,-68,-59,-71,-78,-66,-57,92,-58,-91,-77,-72,-67,]),'FALSE':([49,50,53,54,55,56,67,86,87,88,90,91,92,94,95,98,99,100,101,102,103,104,105,106,107,113,122,124,145,],[60,60,60,60,60,60,-79,60,60,-76,-74,-75,-55,60,-56,-69,-74,-70,-64,-60,60,-65,-63,-61,-62,60,60,60,60,]),'GREATER':([59,60,61,62,63,65,66,68,70,71,72,89,96,97,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,-68,102,-71,-78,-66,-91,-77,-72,-67,]),'INT':([0,13,25,27,31,84,133,],[3,20,3,3,3,3,3,]),'DOUBLE':([0,13,25,27,31,84,133,],[4,18,4,4,4,4,4,]),'BOOL':([0,13,25,27,31,84,133,],[6,21,6,6,6,6,6,]),'GREATEROREQUAL':([59,60,61,62,63,65,66,68,70,71,72,89,96,97,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,-80,-68,107,-71,-78,-66,-91,-77,-72,-67,]),'RBRACKET':([1,25,27,29,30,34,35,36,37,38,39,40,43,45,51,114,119,126,127,128,129,131,140,142,146,147,149,],[-6,-3,-3,-2,-30,-30,52,-36,-29,-34,-37,-35,-33,-32,-31,-38,-43,-30,-42,-44,-47,-41,146,-39,-88,-40,150,]),'MAIN':([0,1,9,11,12,25,29,58,83,117,150,],[-3,-6,-28,-27,16,-3,-2,-26,-28,-13,-25,]),'OR':([59,60,61,62,63,65,66,68,69,70,71,72,89,96,97,108,123,125,135,136,137,139,],[-82,-87,-81,-84,-85,-86,-83,-73,95,-80,-68,-59,-71,-78,-66,-57,95,-58,-91,-77,-72,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition_comp':([131,],[142,]),'expression_comp':([69,123,],[93,138,]),'andor':([69,123,],[94,94,]),'var_type':([0,25,27,31,84,133,],[2,2,2,46,2,46,]),'main_block':([23,],[26,]),'to_actual_type':([2,],[10,]),'function_call':([49,50,53,54,55,56,86,87,94,103,113,122,124,145,],[63,63,75,75,63,63,75,63,63,63,75,63,63,63,]),'var_cte':([49,50,53,54,55,56,86,87,94,103,113,122,124,145,],[64,70,76,76,70,70,76,70,70,70,76,70,70,148,]),'add_to_pilaO':([70,],[96,]),'fondo_falso':([67,],[87,]),'exp_comp':([72,],[108,]),'operator':([71,],[99,]),'statement_comp':([30,34,118,126,],[34,34,34,34,]),'more_vars':([0,27,84,],[9,30,118,]),'more_statements':([30,34,118,126,],[35,51,134,140,]),'func_params':([54,86,],[78,120,]),'more_factor':([68,],[89,]),'vars':([0,25,27,84,],[1,29,1,1,]),'more_func':([9,83,],[12,117,]),'write':([30,34,118,126,],[36,36,36,36,]),'read':([30,34,118,126,],[40,40,40,40,]),'program':([0,],[5,]),'statement':([30,34,118,126,],[37,37,37,37,]),'factor':([50,55,56,87,94,103,122,124,],[68,68,68,68,68,68,68,68,]),'main':([12,],[15,]),'add_to_pOper':([90,99,],[122,124,]),'function':([30,34,118,126,],[39,39,39,39,]),'procedure_name':([16,24,],[23,28,]),'func_type':([13,],[17,]),'comp':([50,55,56,94,],[69,69,69,123,]),'var_comp':([53,54,86,113,],[74,79,79,130,]),'cte_bool':([49,50,53,54,55,56,86,87,94,103,113,122,124,145,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'pars':([31,],[47,]),'func':([9,83,],[11,11,]),'multiplier':([68,],[90,]),'var_more':([79,130,],[112,141,]),'condition':([30,34,118,126,],[43,43,43,43,]),'cycle':([30,34,118,126,],[38,38,38,38,]),'add_to_param_type':([46,],[57,]),'term':([50,55,56,87,94,103,122,124,],[71,71,71,71,71,71,137,71,]),'assignation':([30,34,118,126,],[45,45,45,45,]),'func_block':([58,],[83,]),'more_pars':([116,],[132,]),'more_term':([71,],[97,]),'comparator':([72,],[103,]),'to_var_table':([14,82,],[22,116,]),'exp':([50,55,56,87,94,103,124,],[72,72,72,121,72,125,139,]),'expression':([50,55,56,],[73,80,81,]),'block':([109,115,143,],[127,131,147,]),'pars_comp':([31,133,],[48,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> more_vars more_func main','program',3,'p_program','drawyparser.py',37),
  ('vars -> var_type to_actual_type ID to_var_table SEMICOLON vars','vars',6,'p_vars','drawyparser.py',42),
  ('vars -> <empty>','vars',0,'p_vars','drawyparser.py',43),
  ('to_actual_type -> <empty>','to_actual_type',0,'p_to_actual_type','drawyparser.py',47),
  ('to_var_table -> <empty>','to_var_table',0,'p_to_var_table','drawyparser.py',54),
  ('more_vars -> vars','more_vars',1,'p_more_vars','drawyparser.py',68),
  ('more_vars -> <empty>','more_vars',0,'p_more_vars','drawyparser.py',69),
  ('var_type -> INT','var_type',1,'p_var_type','drawyparser.py',73),
  ('var_type -> DOUBLE','var_type',1,'p_var_type','drawyparser.py',74),
  ('var_type -> BOOL','var_type',1,'p_var_type','drawyparser.py',75),
  ('var_type -> INTLIST','var_type',1,'p_var_type','drawyparser.py',76),
  ('var_type -> DOUBLELIST','var_type',1,'p_var_type','drawyparser.py',77),
  ('func -> FUNC func_type ID procedure_name LPAR pars RPAR func_block more_func','func',9,'p_func','drawyparser.py',82),
  ('func_type -> INT','func_type',1,'p_func_type','drawyparser.py',86),
  ('func_type -> DOUBLE','func_type',1,'p_func_type','drawyparser.py',87),
  ('func_type -> BOOL','func_type',1,'p_func_type','drawyparser.py',88),
  ('func_type -> VOID','func_type',1,'p_func_type','drawyparser.py',89),
  ('procedure_name -> <empty>','procedure_name',0,'p_procedure_name','drawyparser.py',94),
  ('pars -> pars_comp','pars',1,'p_pars','drawyparser.py',104),
  ('pars -> <empty>','pars',0,'p_pars','drawyparser.py',105),
  ('pars_comp -> var_type add_to_param_type ID to_var_table more_pars','pars_comp',5,'p_pars_comp','drawyparser.py',109),
  ('add_to_param_type -> <empty>','add_to_param_type',0,'p_add_to_param_type','drawyparser.py',115),
  ('more_pars -> COMMA pars_comp','more_pars',2,'p_more_pars','drawyparser.py',121),
  ('more_pars -> <empty>','more_pars',0,'p_more_pars','drawyparser.py',122),
  ('func_block -> LBRACKET more_vars more_statements RETURN var_cte SEMICOLON RBRACKET','func_block',7,'p_func_block','drawyparser.py',126),
  ('func_block -> <empty>','func_block',0,'p_func_block','drawyparser.py',127),
  ('more_func -> func','more_func',1,'p_more_func','drawyparser.py',130),
  ('more_func -> <empty>','more_func',0,'p_more_func','drawyparser.py',131),
  ('more_statements -> statement','more_statements',1,'p_more_statements','drawyparser.py',135),
  ('more_statements -> <empty>','more_statements',0,'p_more_statements','drawyparser.py',136),
  ('statement -> statement_comp more_statements','statement',2,'p_statement','drawyparser.py',140),
  ('statement_comp -> assignation','statement_comp',1,'p_statement_comp','drawyparser.py',144),
  ('statement_comp -> condition','statement_comp',1,'p_statement_comp','drawyparser.py',145),
  ('statement_comp -> cycle','statement_comp',1,'p_statement_comp','drawyparser.py',146),
  ('statement_comp -> read','statement_comp',1,'p_statement_comp','drawyparser.py',147),
  ('statement_comp -> write','statement_comp',1,'p_statement_comp','drawyparser.py',148),
  ('statement_comp -> function','statement_comp',1,'p_statement_comp','drawyparser.py',149),
  ('assignation -> ID EQUALS expression SEMICOLON','assignation',4,'p_assignation','drawyparser.py',153),
  ('condition -> IF LPAR expression RPAR block condition_comp','condition',6,'p_condition','drawyparser.py',157),
  ('condition_comp -> ELSE block','condition_comp',2,'p_condition_comp','drawyparser.py',161),
  ('condition_comp -> <empty>','condition_comp',0,'p_condition_comp','drawyparser.py',162),
  ('cycle -> WHILE LPAR expression RPAR block','cycle',5,'p_cycle','drawyparser.py',166),
  ('read -> READ LPAR var_cte RPAR SEMICOLON','read',5,'p_read','drawyparser.py',170),
  ('write -> WRITE LPAR var_comp RPAR SEMICOLON','write',5,'p_write','drawyparser.py',174),
  ('var_comp -> function_call','var_comp',1,'p_var_comp','drawyparser.py',178),
  ('var_comp -> var_cte','var_comp',1,'p_var_comp','drawyparser.py',179),
  ('function -> ID LPAR func_params RPAR SEMICOLON','function',5,'p_function','drawyparser.py',183),
  ('func_params -> var_comp var_more','func_params',2,'p_func_params','drawyparser.py',187),
  ('func_params -> <empty>','func_params',0,'p_func_params','drawyparser.py',188),
  ('var_more -> COMMA var_comp var_more','var_more',3,'p_var_more','drawyparser.py',192),
  ('var_more -> <empty>','var_more',0,'p_var_more','drawyparser.py',193),
  ('expression -> comp expression_comp','expression',2,'p_expression','drawyparser.py',197),
  ('expression_comp -> andor comp expression_comp','expression_comp',3,'p_expression_comp','drawyparser.py',201),
  ('expression_comp -> <empty>','expression_comp',0,'p_expression_comp','drawyparser.py',202),
  ('andor -> AND','andor',1,'p_andor','drawyparser.py',206),
  ('andor -> OR','andor',1,'p_andor','drawyparser.py',207),
  ('comp -> exp exp_comp','comp',2,'p_comp','drawyparser.py',211),
  ('exp_comp -> comparator exp','exp_comp',2,'p_exp_comp','drawyparser.py',215),
  ('exp_comp -> <empty>','exp_comp',0,'p_exp_comp','drawyparser.py',216),
  ('comparator -> GREATER','comparator',1,'p_comparator','drawyparser.py',220),
  ('comparator -> FEWER','comparator',1,'p_comparator','drawyparser.py',221),
  ('comparator -> GREATEROREQUAL','comparator',1,'p_comparator','drawyparser.py',222),
  ('comparator -> FEWEROREQUAL','comparator',1,'p_comparator','drawyparser.py',223),
  ('comparator -> DIFFERENT','comparator',1,'p_comparator','drawyparser.py',224),
  ('comparator -> EQUALEQUALS','comparator',1,'p_comparator','drawyparser.py',225),
  ('exp -> term more_term','exp',2,'p_exp','drawyparser.py',229),
  ('more_term -> operator add_to_pOper exp','more_term',3,'p_more_term','drawyparser.py',233),
  ('more_term -> <empty>','more_term',0,'p_more_term','drawyparser.py',234),
  ('operator -> PLUS','operator',1,'p_operator','drawyparser.py',238),
  ('operator -> MINUS','operator',1,'p_operator','drawyparser.py',239),
  ('term -> factor more_factor','term',2,'p_term','drawyparser.py',244),
  ('more_factor -> multiplier add_to_pOper term','more_factor',3,'p_more_factor','drawyparser.py',248),
  ('more_factor -> <empty>','more_factor',0,'p_more_factor','drawyparser.py',249),
  ('add_to_pOper -> <empty>','add_to_pOper',0,'p_add_to_pOper','drawyparser.py',253),
  ('multiplier -> MULTIPLICATION','multiplier',1,'p_multiplier','drawyparser.py',259),
  ('multiplier -> DIVISION','multiplier',1,'p_multiplier','drawyparser.py',260),
  ('factor -> LPAR fondo_falso exp RPAR','factor',4,'p_factor','drawyparser.py',265),
  ('factor -> var_cte add_to_pilaO','factor',2,'p_factor','drawyparser.py',266),
  ('fondo_falso -> <empty>','fondo_falso',0,'p_fondo_falso','drawyparser.py',270),
  ('add_to_pilaO -> <empty>','add_to_pilaO',0,'p_add_to_pilaO','drawyparser.py',276),
  ('var_cte -> CTEINT','var_cte',1,'p_var_cte','drawyparser.py',282),
  ('var_cte -> CTEDOUBLE','var_cte',1,'p_var_cte','drawyparser.py',283),
  ('var_cte -> ID','var_cte',1,'p_var_cte','drawyparser.py',284),
  ('var_cte -> cte_bool','var_cte',1,'p_var_cte','drawyparser.py',285),
  ('var_cte -> function_call','var_cte',1,'p_var_cte','drawyparser.py',286),
  ('cte_bool -> TRUE','cte_bool',1,'p_cte_bool','drawyparser.py',292),
  ('cte_bool -> FALSE','cte_bool',1,'p_cte_bool','drawyparser.py',293),
  ('block -> LBRACKET more_statements RBRACKET','block',3,'p_block','drawyparser.py',297),
  ('main -> MAIN procedure_name main_block','main',3,'p_main','drawyparser.py',301),
  ('main_block -> LBRACKET more_vars more_statements RBRACKET','main_block',4,'p_main_block','drawyparser.py',305),
  ('function_call -> ID LPAR func_params RPAR','function_call',4,'p_function_call','drawyparser.py',309),
]
